{"name":"Roadrunnr NodeJs","tagline":"A NodeJS wrapper for RoadRunnr delivery service","body":"# RoadRunnr NodeJs Wrapper\r\nA javascript wrapper for RoadRunnr delivery service. In-built OAuth. You don't need to worry about getting and maintaining an access token. Just set your keys and you are good to go!\r\n\r\n```\r\nnpm install roadrunnr\r\n```\r\n\r\n### Include and configure your keys\r\n```javascript\r\nvar runnr = require('roadrunnr');\r\nrunnr.setKeys(CLIENT_ID, CLIENT_SECRET);\r\n```\r\n\r\n### APIs available\r\n* [Create shipment](#create_shipment)\r\n* [Track shipment](#track_shipment)\r\n* [Cancel shipment](#cancel_shipment)\r\n* [Check serviceability](#check_serviceability)\r\n* [Auto assign lat long](#assign_lat_long)\r\n* [Use test environment](#set_test_environment)\r\n\r\n### <a name=\"create_shipment\"></a>Create shipment\r\n```javascript\r\n// Add pickup details\r\norderRequest.pickup.user.name                           = '';\r\norderRequest.pickup.user.phone_no                       = '';\r\norderRequest.pickup.user.email                          = '';\r\norderRequest.pickup.user.type                           = '';\r\norderRequest.pickup.user.external_id                    = '';\r\norderRequest.pickup.user.full_address.address           = '';\r\norderRequest.pickup.user.full_address.locality.name     = ''; // Can be skipped, see below\r\norderRequest.pickup.user.full_address.sub_locality.name = ''; // Can be skipped, see below\r\norderRequest.pickup.user.full_address.city.name         = '';\r\norderRequest.pickup.user.full_address.geo.latitude      = plat; // Optional\r\norderRequest.pickup.user.full_address.geo.longitude     = plng; // Optional\r\n\r\n\r\n// Add drop details\r\norderRequest.drop.user.name                             = '';\r\norderRequest.drop.user.phone_no                         = '';\r\norderRequest.drop.user.email                            = '';\r\norderRequest.drop.user.type                             = '';\r\norderRequest.drop.user.external_id                      = '';\r\norderRequest.drop.user.full_address.address             = '';\r\norderRequest.pickup.user.full_address.locality.name     = ''; // Can be skipped, see below\r\norderRequest.pickup.user.full_address.sub_locality.name = ''; // Can be skipped, see below\r\norderRequest.pickup.user.full_address.city.name         = '';\r\norderRequest.drop.user.full_address.geo.latitude        = dlat; // Optional\r\norderRequest.drop.user.full_address.geo.longitude       = dlng; // Optional\r\n\r\n// Order Details\r\norderRequest.order_details.order_id                 = '';\r\norderRequest.order_details.order_value              = '0';\r\norderRequest.order_details.amount_to_be_collected   = '0';\r\norderRequest.order_details.order_type.name          = 'CashOnDelivery';\r\norderRequest.order_details.order_items[0].quantity  = 1;\r\norderRequest.order_details.order_items[0].price     = 0;\r\norderRequest.order_details.order_items[0].item.name = '';\r\norderRequest.order_details.created_at               = \"YYYY-MM-DD hh: MM\";\r\n\r\nrunnr.createShipment(orderRequest, function(error, response) {\r\n  console.log(response);\r\n});\r\n```\r\nRoadrunnr allows you to skip the \"locality\" and \"sub_locality\" parameters if you provide the accurate lat & long for the addresses. I've added a geocoder which converts the address almost accurate lat long. [Instrutions here](#assign_lat_long).\r\n\r\n### <a name=\"track_shipment\"></a>Track shipment\r\n```javascript\r\nrunnr.trackShipment(id, function(error, response) {\r\n  if (error == null) {\r\n    console.log(response);\r\n  }\r\n});\r\n```\r\n\r\n### <a name=\"cancel_shipment\"></a>Cancel shipment\r\n```javascript\r\nrunnr.cancelShipment(id, function(error, response) {\r\n  if (error == null) {\r\n    console.log(response);\r\n  }\r\n});\r\n```\r\n\r\n### <a name=\"check_serviceability\"></a>Check serviceability\r\n```javascript\r\nrunnr.checkServiceability(orderRequest, function(error, response) {\r\n  if (error == null) {\r\n    console.log(response);\r\n  }\r\n});\r\n```\r\n\r\n### <a name=\"assign_lat_long\"></a>Optional, auto assign lat & long\r\nPlease run ```npm install geocoder``` before using the following function. You can skip the ```locality``` and ```sub_locality``` fields using this. \r\nIMPORTANT NOTE : This function geocodes the address in ```orderRquest.pickup.user.full_address.address``` and ```orderRequest.drop.user.full_address.address```. Make sure this the complete address which includes the city name and the pin code.\r\n```javascript\r\nrunnr.assignLatLong(orderRequest, function(error, newOrderRequest) {\r\n  if (error) {\r\n    // There was some error geocoding one of the addresses\r\n  } else {\r\n    runnr.createShipment(newOrderRequest, function(error, response) {\r\n      if (error == null) {\r\n        console.log(response);\r\n      }\r\n    }\r\n  }\r\n});\r\n```\r\n\r\n#### <a name=\"set_test_environment\"></a>Use test environment\r\nTo use Roadrunnr's test portal, just change the environment\r\n```javascript\r\nrunnr.setEnvironment('test');\r\n```\r\n\r\n---\r\n### Submit issues\r\nYou can raise an issue in this repo or mail me at sidhant@hashexclude.com","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}